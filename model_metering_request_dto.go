/*
 * Revenium Metering API
 *
 * Revenium Metering API
 *
 * API version: 1.14.0-SNAPSHOT
 * Contact: info@revenium.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package metering

type MeteringRequestDto struct {
	Api string `json:"api,omitempty"`
	// The Product Key ID
	ProductKey string `json:"productKey,omitempty"`
	// The Application ID
	Application string `json:"application,omitempty"`
	// The HTTP method being invoked
	Method string `json:"method"`
	// The HTTP URL being invoked
	Url string `json:"url,omitempty"`
	// Additional billing metadata (supports numeric values and comma-seperated key-value pairs)
	Metadata string `json:"metadata,omitempty"`
	// Backend API response time
	BackendLatency float64 `json:"backendLatency,omitempty"`
	// Latency introduced by the API GW
	GatewayLatency float64 `json:"gatewayLatency,omitempty"`
	// Backend HTTP response code
	ResponseCode int32 `json:"responseCode"`
	// Whether or not the backend timed out
	TimedOut bool `json:"timedOut,omitempty"`
	// The size of the API request in bytes
	RequestMessageSize int64 `json:"requestMessageSize,omitempty"`
	// The size of the API response in bytes
	ResponseMessageSize int64 `json:"responseMessageSize,omitempty"`
	// The comma seperated list of names of the headers in the request
	RequestHeaders []string `json:"requestHeaders"`
	// The comma seperated list of names of the headers in the response
	ResponseHeaders []string `json:"responseHeaders"`
	// The HTTP User Agent
	UserAgent string `json:"userAgent,omitempty"`
	// The Remote User
	RemoteUser string `json:"remoteUser,omitempty"`
	// The Remote Host
	RemoteHost string `json:"remoteHost,omitempty"`
	// The HTTP Protocol
	HttpProtocol string `json:"httpProtocol,omitempty"`
	// The Content Type
	ContentType string `json:"contentType,omitempty"`
	// The Correlation ID
	CorrelationId string `json:"correlationId,omitempty"`
	// platformAPIKey
	PlatformAPIKey string `json:"platformAPIKey"`
	// Dynamic metering elements
	Elements []ElementDto `json:"elements"`
	// the source of the event
	Source string `json:"source,omitempty"`
}
